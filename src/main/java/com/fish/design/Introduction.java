package com.fish.design;

/**
 *  引言
 */
public class Introduction {
    /*
     * 设计模式如何解决设计问题
     * 1.寻找合适的对象
     *   面向对象程序由对象组成，对象包括数据和对数据进行操作的过程，
     *   过程通常称为方法或操作。对象在收到客户的请求后，执行相应的操作。
     *
     * 2.决定对象的粒度
     *
     * 3.对象的接口
     *   当给对象发送请求时，所引起的具体操作既与请求本身有关又与接收对象有关。
     *   支持相同请求的不同对象可能对请求激发的操作有不同的实现。
     *   发送给对象的请求和它的相应操作在运行时刻的连接就称之为动态绑定。
     *   动态绑定是指发送的请求知道运行时刻才受你的具体的实现的约束。
     *   动态绑定允许你在运行时刻彼此替换有相同接口的对象。这种可替换性就称为多态。
     *
     * 4.描述对象的实现
     *   类继承根据一个对象的实现定义了另一个对象的实现。它是代码和表示的共享机制。
     *   接口继承描述了一个对象什么时候能被用来代替另一个对象。
     *
     */
    public static void main(String[] args) {
        System.out.println("read me first!");
    }
}
